{"ast":null,"code":"var _jsxFileName = \"/Users/larasof/Desktop/UPWORK/ADB ANDROID/Socket/react-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const socket = useRef();\n  const [input, setInput] = useState(0);\n  let [data, setData] = useState([]);\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9014\");\n    socket.current.on(\"connection\", () => {\n      console.log(\"connected to server\");\n    });\n    socket.current.on(\"message\", message => {\n      console.log(`message from ${socket.current.id} : ${message}`);\n      setInput(message);\n    });\n    socket.current.on(\"data\", message => {\n      setData(message);\n    });\n  }, [data]);\n\n  const handleClick = () => {\n    socket.current.emit(\"data\", input);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"DEVICE : \", input]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: \"GET FILE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), [data].map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PrCyhhR/hx2r4iNcM2o5q4BaieA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/larasof/Desktop/UPWORK/ADB ANDROID/Socket/react-client/src/App.js"],"names":["useEffect","useRef","useState","io","App","socket","input","setInput","data","setData","current","on","console","log","message","id","handleClick","emit","map","item","index"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,WAAP;AAEA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAA9B;AAKAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACK,OAAP,GAAiBP,EAAE,CAAC,qBAAD,CAAnB;AAEAE,IAAAA,MAAM,CAACK,OAAP,CAAeC,EAAf,CAAkB,YAAlB,EAAgC,MAAM;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,KAFD;AAIAR,IAAAA,MAAM,CAACK,OAAP,CAAeC,EAAf,CAAkB,SAAlB,EAA8BG,OAAD,IAAa;AACxCF,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeR,MAAM,CAACK,OAAP,CAAeK,EAAG,MAAKD,OAAQ,EAA3D;AAEAP,MAAAA,QAAQ,CAACO,OAAD,CAAR;AACD,KAJD;AAOAT,IAAAA,MAAM,CAACK,OAAP,CAAeC,EAAf,CAAkB,MAAlB,EAA2BG,OAAD,IAAa;AAErCL,MAAAA,OAAO,CAACK,OAAD,CAAP;AAED,KAJD;AAOD,GArBQ,EAqBP,CAACN,IAAD,CArBO,CAAT;;AAyBA,QAAMQ,WAAW,GAAG,MAAM;AACxBX,IAAAA,MAAM,CAACK,OAAP,CAAeO,IAAf,CAAoB,MAApB,EAA4BX,KAA5B;AACD,GAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACG;AAAA,8BAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEU,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAQG,CAACR,IAAD,EAAOU,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3B,0BAAO;AAAA,kBAAiBD;AAAjB,SAASC,KAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAED,KAHA,CARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvDQhB,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport { io } from \"socket.io-client\";\n\nfunction App() {\n  const socket = useRef();\n  const [input, setInput] = useState(0);\n  let [data, setData] = useState([]);\n\n  \n  \n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:9014\");\n\n    socket.current.on(\"connection\", () => {\n      console.log(\"connected to server\");\n    });\n\n    socket.current.on(\"message\", (message) => {\n      console.log(`message from ${socket.current.id} : ${message}`);\n\n      setInput(message);\n    }\n    );\n\n    socket.current.on(\"data\", (message) => {\n \n      setData(message);\n\n    }\n    );\n\n  },[data]);\n  \n\n\n  const handleClick = () => {\n    socket.current.emit(\"data\", input);\n  };\n   \n\n  return (\n    <div className=\"App\">\n       <h4>DEVICE : {input}</h4>\n\n      <button type=\"button\" onClick={handleClick}>\n        GET FILE\n      </button>\n\n      \n      {[data].map((item, index) => {\n        return <h4 key={index}>{item}</h4>;\n\n      })}\n         \n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}